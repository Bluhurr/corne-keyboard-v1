/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 18 30 31 7 19 8 20 32 9 21 33 10 22 34 11 23 35 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-preferred";
        };

        toggle_game_layers: toggle_game_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "TOGGLE_GAME_LAYERS";
            #binding-cells = <0>;
            bindings = <&trans>, <&tog 3>, <&tog 4>;

            tapping-term-ms = <200>;
        };

        hmr_layers: hmr_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_LAYERS";
            bindings = <&mo>, <&toggle_game_layers>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>;

            label = "ALT_TAB";
        };

        alt_shift_tab: alt_shift_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>;

            label = "ALT_SHIFT_TAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP    |
            // |  TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '      |
            // | LCTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHIFT  |
            //                     | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q              &kp W         &kp E            &kp R  &kp T        &kp Y      &kp U            &kp I      &kp O         &kp P                       &kp BSPC
&kp TAB    &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &kp F  &kp G        &kp H      &kp J            &kp K      &hmr RCTRL L  &hmr RIGHT_SHIFT SEMICOLON  &kp SQT
&kp LCTRL  &kp Z              &kp X         &kp C            &kp V  &kp B        &kp N      &kp M            &kp COMMA  &kp DOT       &kp FSLH                    &kp BACKSLASH
                                            &kp LGUI         &mo 1  &kp SPACE    &kp ENTER  &hmr_layers 2 0  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp N5          &kp NUMBER_6    &kp N7          &kp N8        &kp N9           &kp N0  &kp BSPC
&alt_shift_tab  &alt_tab      &trans        &alt_shift_tab  &alt_tab      &trans          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &trans          &kp LEFT_ARROW  &kp DOWN      &kp RIGHT        &trans  &trans
                                            &kp LGUI        &trans        &kp SPACE       &kp RET         &trans          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT    &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS           &kp KP_MULTIPLY  &kp LPAR               &kp RPAR   &kp BSPC
&kp LCTRL  &kp EXCL  &kp PLUS  &kp MINUS  &kp EQUAL  &kp AMPS     &kp PIPE   &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp MINUS  &kp GRAVE
&kp LSHFT  &trans    &trans    &trans     &trans     &trans       &kp UNDER  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp PIPE   &kp TILDE
                               &kp LGUI   &trans     &kp SPACE    &kp RET    &trans             &kp RALT
            >;
        };

        FPS_Game_Layer {
            bindings = <
&trans            &trans          &kp Q   &kp W   &kp E   &trans    &trans  &trans               &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp A   &kp S   &kp D   &kp F     &trans  &trans               &trans  &trans  &trans  &trans
&trans            &trans          &trans  &trans  &trans  &trans    &trans  &trans               &trans  &trans  &trans  &trans
                                          &trans  &trans  &trans    &trans  &toggle_game_layers  &trans
            >;
        };

        LoL_Game_Layer {
            bindings = <
&kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5          &trans     &trans               &trans  &trans  &trans  &trans
&trans  &kp Q         &kp W         &kp E         &kp R         &kp NUMBER_6    &trans     &trans               &trans  &trans  &trans  &trans
&trans  &trans        &trans        &kp D         &kp F         &trans          &trans     &trans               &trans  &trans  &trans  &trans
                                    &trans        &kp Y         &kp SPACE       &kp ENTER  &toggle_game_layers  &trans
            >;
        };
    };
};
